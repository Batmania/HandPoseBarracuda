//
// Postprocessing compute shader for the hand mesh pipeline
//

#pragma kernel mesh_kernel

#include "LowPassFilter.hlsl"

//
// Hand mesh postprocess
//

#define MESH_VERTEX_COUNT 21

StructuredBuffer<float4> _mesh_input;
RWStructuredBuffer<float4> _mesh_output;

float4x4 _mesh_xform;
float3 _mesh_filter; // Beta, CutOff_min, T_e

[numthreads(MESH_VERTEX_COUNT, 1, 1)]
void mesh_kernel(uint id : SV_DispatchThreadID)
{
    float3 x = _mesh_input[id + 1].xyz;
    float3 p_x = _mesh_output[id].xyz;
    float3 p_dx = _mesh_output[id + MESH_VERTEX_COUNT].xyz;

    x = mul(_mesh_xform, float4(x, 1)).xyz;

    float3 dx = lpf_step_dx(x, p_x, p_dx, _mesh_filter);
    x = lpf_step_x(x, p_x, dx, _mesh_filter);

    _mesh_output[id] = float4(x, 1);
    _mesh_output[id + MESH_VERTEX_COUNT] = float4(dx, 1);
}
